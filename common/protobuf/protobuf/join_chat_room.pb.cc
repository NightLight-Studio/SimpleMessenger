// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: join_chat_room.proto

#include "join_chat_room.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
constexpr JoinChatRoom::JoinChatRoom(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : user_id_(int64_t{0})
  , chat_room_id_(int64_t{0})
  , nt_type_(0){}
struct JoinChatRoomDefaultTypeInternal {
  constexpr JoinChatRoomDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~JoinChatRoomDefaultTypeInternal() {}
  union {
    JoinChatRoom _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT JoinChatRoomDefaultTypeInternal _JoinChatRoom_default_instance_;
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_join_5fchat_5froom_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_join_5fchat_5froom_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_join_5fchat_5froom_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_join_5fchat_5froom_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::JoinChatRoom, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::JoinChatRoom, nt_type_),
  PROTOBUF_FIELD_OFFSET(::JoinChatRoom, user_id_),
  PROTOBUF_FIELD_OFFSET(::JoinChatRoom, chat_room_id_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::JoinChatRoom)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_JoinChatRoom_default_instance_),
};

const char descriptor_table_protodef_join_5fchat_5froom_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\024join_chat_room.proto\"F\n\014JoinChatRoom\022\017"
  "\n\007nt_type\030\001 \001(\005\022\017\n\007user_id\030\002 \001(\003\022\024\n\014chat"
  "_room_id\030\003 \001(\003b\006proto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_join_5fchat_5froom_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_join_5fchat_5froom_2eproto = {
  false, false, 102, descriptor_table_protodef_join_5fchat_5froom_2eproto, "join_chat_room.proto", 
  &descriptor_table_join_5fchat_5froom_2eproto_once, nullptr, 0, 1,
  schemas, file_default_instances, TableStruct_join_5fchat_5froom_2eproto::offsets,
  file_level_metadata_join_5fchat_5froom_2eproto, file_level_enum_descriptors_join_5fchat_5froom_2eproto, file_level_service_descriptors_join_5fchat_5froom_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_join_5fchat_5froom_2eproto_getter() {
  return &descriptor_table_join_5fchat_5froom_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_join_5fchat_5froom_2eproto(&descriptor_table_join_5fchat_5froom_2eproto);

// ===================================================================

class JoinChatRoom::_Internal {
 public:
};

JoinChatRoom::JoinChatRoom(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:JoinChatRoom)
}
JoinChatRoom::JoinChatRoom(const JoinChatRoom& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&user_id_, &from.user_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&nt_type_) -
    reinterpret_cast<char*>(&user_id_)) + sizeof(nt_type_));
  // @@protoc_insertion_point(copy_constructor:JoinChatRoom)
}

inline void JoinChatRoom::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&user_id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&nt_type_) -
    reinterpret_cast<char*>(&user_id_)) + sizeof(nt_type_));
}

JoinChatRoom::~JoinChatRoom() {
  // @@protoc_insertion_point(destructor:JoinChatRoom)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void JoinChatRoom::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void JoinChatRoom::ArenaDtor(void* object) {
  JoinChatRoom* _this = reinterpret_cast< JoinChatRoom* >(object);
  (void)_this;
}
void JoinChatRoom::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void JoinChatRoom::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void JoinChatRoom::Clear() {
// @@protoc_insertion_point(message_clear_start:JoinChatRoom)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nt_type_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(nt_type_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* JoinChatRoom::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 nt_type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          nt_type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 user_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          user_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 chat_room_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          chat_room_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* JoinChatRoom::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:JoinChatRoom)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 nt_type = 1;
  if (this->_internal_nt_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_nt_type(), target);
  }

  // int64 user_id = 2;
  if (this->_internal_user_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_user_id(), target);
  }

  // int64 chat_room_id = 3;
  if (this->_internal_chat_room_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_chat_room_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:JoinChatRoom)
  return target;
}

size_t JoinChatRoom::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:JoinChatRoom)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 user_id = 2;
  if (this->_internal_user_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_user_id());
  }

  // int64 chat_room_id = 3;
  if (this->_internal_chat_room_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_chat_room_id());
  }

  // int32 nt_type = 1;
  if (this->_internal_nt_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_nt_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData JoinChatRoom::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    JoinChatRoom::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*JoinChatRoom::GetClassData() const { return &_class_data_; }

void JoinChatRoom::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<JoinChatRoom *>(to)->MergeFrom(
      static_cast<const JoinChatRoom &>(from));
}


void JoinChatRoom::MergeFrom(const JoinChatRoom& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:JoinChatRoom)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_user_id() != 0) {
    _internal_set_user_id(from._internal_user_id());
  }
  if (from._internal_chat_room_id() != 0) {
    _internal_set_chat_room_id(from._internal_chat_room_id());
  }
  if (from._internal_nt_type() != 0) {
    _internal_set_nt_type(from._internal_nt_type());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void JoinChatRoom::CopyFrom(const JoinChatRoom& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:JoinChatRoom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JoinChatRoom::IsInitialized() const {
  return true;
}

void JoinChatRoom::InternalSwap(JoinChatRoom* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(JoinChatRoom, nt_type_)
      + sizeof(JoinChatRoom::nt_type_)
      - PROTOBUF_FIELD_OFFSET(JoinChatRoom, user_id_)>(
          reinterpret_cast<char*>(&user_id_),
          reinterpret_cast<char*>(&other->user_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata JoinChatRoom::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_join_5fchat_5froom_2eproto_getter, &descriptor_table_join_5fchat_5froom_2eproto_once,
      file_level_metadata_join_5fchat_5froom_2eproto[0]);
}

// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::JoinChatRoom* Arena::CreateMaybeMessage< ::JoinChatRoom >(Arena* arena) {
  return Arena::CreateMessageInternal< ::JoinChatRoom >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
